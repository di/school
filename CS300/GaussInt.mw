<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="1"/><View-Properties><Zoom percentage="150"/></View-Properties><Styles><Layout alignment="left" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Heading 3" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Author" rightmargin="0.0" spaceabove="8.0" spacebelow="8.0"/><Layout alignment="left" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Heading 2" rightmargin="0.0" spaceabove="8.0" spacebelow="2.0"/><Layout alignment="left" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Title" rightmargin="0.0" spaceabove="12.0" spacebelow="12.0"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input"/><Font background="[0,0,0]" family="Times New Roman" name="2D Comment" underline="false"/><Font background="[0,0,0]" italic="false" name="_cstyle259"/><Font background="[0,0,0]" italic="false" name="_cstyle258"/><Font background="[0,0,0]" italic="false" name="_cstyle257"/><Font background="[0,0,0]" italic="false" name="_cstyle256"/><Font background="[0,0,0]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" name="Heading 3" readonly="false" size="12" underline="false"/><Font background="[0,0,0]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Heading 2" readonly="false" size="14" underline="false"/><Font background="[0,0,0]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Author" readonly="false" size="12" underline="false"/><Font background="[0,0,0]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Title" readonly="false" size="18" underline="true"/><Font background="[0,0,0]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Normal" readonly="false" size="12" underline="false"/><Font background="[0,0,0]" family="Times New Roman" name="Page Number" underline="false"/></Styles><Page-Numbers enabled="false" first-number="1" first-numbered-page="1" horizontal-location="right" style="Page Number" vertical-location="bottom"/><Group><Input><Text-field layout="Title" style="Title">The Gaussian Integer</Text-field><Text-field layout="Author" style="Author"><Font encoding="ISO8859-1">\251 Mike May, S.J., maymk@slu.edu, Saint Louis University</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">restart:</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">In chapter 8, we have been looking at Euclidean domain, PIDs, and UFDs. The material covers concepts like norm, prime, irreducible, the division algorithm, the Euclidean algorithm, gcd, lcm, and factorization into irreducibles. All of these concepts are attempts to abstract ways in which our favorite two examples of rings, the ring of integers, and the ring of polynomials in one indeterminate over a field, are nice.  The problem with keeping things straight over those rings is that we are too familiar with them. We also find that too many terms wind up being equivalent,  It is thus useful to look at some other rings where we have to think about the definitions. </Text-field><Text-field layout="Normal" style="Normal"/></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">One set of examples that is developed throughout the exercises in several section of the book concern rings of the form  <Equation input-equation="Z" style="2D Comment">NiMlIlpH</Equation>[<Equation input-equation="sqrt(D)" style="2D Comment">NiMtJSVzcXJ0RzYjJSJERw==</Equation>] , where D is not a perfect square.  These rings are close to the integers and are reasonable to compute with.  But just enough things change to make life interesting.  We will explore those rings a bit.</Text-field><Text-field layout="Normal" style="Normal"/><Text-field layout="Normal" style="Normal">This worksheet will deal with the first case, when D=-1.  Then we are looking at Z[I], the ring of elements of the form   a + b I, where a and b are both integers.  This ring is called the Gaussian integers.  </Text-field><Text-field layout="Normal" style="Normal"> </Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Maple has a whole package of routines to look at this ring.</Text-field><Text-field layout="Normal" style="Normal">We start by loading the GaussInt package.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">with(GaussInt);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">It is worthwhile to check out the help files on GaussInt with the help browser.  Keep the help window for GaussInt handy.  It has links to the specific commands in the package.</Text-field><Text-field layout="Normal" style="Normal"/><Text-field layout="Normal" style="Normal">Recall that Gaussian integers have the form  a + b*I where a and b are integers.  </Text-field></Input></Group><Section collapsed="true"><Title><Text-field layout="Heading 2" style="_cstyle259"><Font bold="true" family="Times New Roman" foreground="[0,0,0]" size="14" underline="false">Functions on a single Gaussian integer</Font></Text-field></Title><Group><Input><Text-field layout="Normal" style="Normal">We start by looking at some of the commands concerned with a single Gaussian integer. 
</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Recall that the standard norm function on   <Equation input-equation="Z" style="2D Comment">NiMlIlpH</Equation>[<Equation input-equation="sqrt(D)" style="2D Comment">NiMtJSVzcXJ0RzYjJSJERw==</Equation>]  takes  a + b <Equation input-equation="sqrt(D)" style="2D Comment">NiMtJSVzcXJ0RzYjJSJERw==</Equation>   to  <Equation input-equation="abs(a^2 - Db^2) = abs((a + b sqrt(D))(a - b sqrt(D)))" style="2D Comment">NiMvLSUkYWJzRzYjLCYqJCUiYUciIiMiIiIqJCUjRGJHRiohIiItRiU2Iy0sJkYpRisqJiUiYkdGKy0lJXNxcnRHNiMlIkRHRitGKzYjLCZGKUYrRjNGLg==</Equation>.  With the Gaussian integers, we want to take  <Equation input-equation=" a + b * I" style="2D Comment">NiMsJiUiYUciIiIqJiUiYkdGJSUiSUdGJUYl</Equation>   to <Equation input-equation="a^2 + b^2 = (a+b*I)(a-b*I)" style="2D Comment">NiMvLCYqJCUiYUciIiMiIiIqJCUiYkdGJ0YoLSwmRiZGKComRipGKCUiSUdGKEYoNiMsJkYmRihGLSEiIg==</Equation>.  The Maple command for this is GInorm.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GInorm(6+12*I);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Since the Gaussian integers are a Euclidean domain, and hence a PID and UFD,  we can factor any nonzero nonunit element as a product of primes.  Recall that primes in the integers need not be prime in the Gaussian integers.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIfactor(10);  GIfactor(17);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Related to finding the prime factorization of an element, is finding the set of divisors, and the number of divisors of a number.  Frequently when we list the divisors of an integer, we only give the positive divisors, because the other divisors are associate of elements on the list.  In the Gaussian integers, we have 4 units, so Maple only lists divisors in the first quadrant.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIdivisor(10); GInodiv(10);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Along the same lines, we can ask whether or not a Gaussian integer is prime, and how many divisors it has.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIprime(5); GInodiv(5); 
GIprime(7); GInodiv(7);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">As we look at primes, it is worthwhile to note the Maple has a prime sieve for the Gaussian integers.  It returns the values of all primes with  norm less than or equal to the norm of a specified Gaussian integer. </Text-field><Text-field layout="Normal" style="Normal">
(Actually, you should notice that the list only includes primes of the form <Equation input-equation="a + b *I" style="2D Comment">NiMsJiUiYUciIiIqJiUiYkdGJSUiSUdGJUYl</Equation>, with either b= 0 and a positive, or with  0 &lt; <Equation input-equation="a &lt;= b" style="2D Comment">NiMxJSJhRyUiYkc=</Equation>.  The prime   <Equation input-equation=" 1 + I " style="2D Comment">NiMsJiIiIkYkJSJJR0Yk</Equation>  and the primes that are integers each have  3 associates, the prime times I, -1, and -I.  Other primes have 7 related primes, the complex conjugate of the original prime, and I, -1, and -I times the prime and its conjugate.)</Text-field><Text-field layout="Normal" style="Normal"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Normal"><Font italic="false" size="12" style="Maple Input" underline="false">GIsieve(7);</Font>  </Text-field></Input></Group><Section><Title><Text-field layout="Heading 3" style="_cstyle258"><Font bold="true" family="Times New Roman" foreground="[0,0,0]" size="12" underline="false">Exercises:</Font></Text-field></Title><Group><Input><Text-field layout="Normal" style="Normal">1)  Give a criterion for primes in Z to remain prime over the Gaussian integers.  Make sure your criterion works on primes up to 30.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Th criterion is ...</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">2) The primes of Z that are less than 30 and remain prime over the Gaussian integers are ...</Text-field><Text-field layout="Normal" style="Normal"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group></Section></Section><Section collapsed="true"><Title><Text-field layout="Heading 2" style="Heading 2">Division and the Division Algorithm</Text-field></Title><Group><Input><Text-field layout="Normal" style="Normal">Before we start on division in the Gaussian integers, recall how we divide complex numbers.  If <Equation input-equation="alpha" style="2D Comment">NiMlJmFscGhhRw==</Equation> and <Equation input-equation="beta" style="2D Comment">NiMlJWJldGFH</Equation> are complex numbers, we first note that   <Equation input-equation="beta*conjugate(beta)" style="2D Comment">NiMqJiUlYmV0YUciIiItJSpjb25qdWdhdGVHNiNGJEYl</Equation>   is real, so that <Equation input-equation="alpha/beta = (alpha*conjugate(beta))/(beta*conjugate(beta))" style="2D Comment">NiMvKiYlJmFscGhhRyIiIiUlYmV0YUchIiIqKEYlRiYtJSpjb25qdWdhdGVHNiNGJ0YmKiZGJ0YmRipGJkYo</Equation>.  This reduces complex division to complex multiplication, and division by a real.</Text-field><Text-field layout="Normal" style="Normal"/><Text-field layout="Normal" style="Normal">The exercises in the book suggest that we do division of Gaussian integers by dividing them as complex numbers and taking the nearest Gaussian integer as the quotient.  We can do this either with the GIquo command, or with the GInearest command on the complex quotient.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">x := 3 + 5*I;  y := 2 + 1*I;
yc := conjugate(y);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">x*(conjugate(y));   y*(conjugate(y));  x/y; </Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">nearquo := GInearest(x/y);  GIquo(x,y);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Having a quotient, we also want to talk about a remainder.  We can either do this by multiplying out what we rounded off, or by using the GIrem command.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">y*nearquo;</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">x - y*nearquo; GIrem(x,y);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Having an algorithm to get a quotient and remainder, we are set up for the Euclidean algorithm.  We we use it to find the gcd of  52  and  19 + 19 I.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">a := 52; b:= 19 + 19*I;</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">q[0] := GIquo(a, b); r[0] := GIrem(a, b);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">q[1] := GIquo(b, r[0]); r[1] := GIrem(b, r[0]);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">q[2] := GIquo(r[0], r[1]); r[2] := GIrem(r[0], r[1]);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">q[3] := GIquo(r[1], r[2]); r[3] := GIrem(r[1], r[2]);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">q[4] := GIquo(r[2], r[3]); r[4] := GIrem(r[2], r[3]);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Thus the gcd is <Equation input-equation="r[3] = 1 + I" style="2D Comment">NiMvJiUickc2IyIiJCwmIiIiRiklIklHRik=</Equation>.   We get the same result with the Maple command.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIgcd(a, b);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">As with the integers, we can check this by comparing the prime factorization of a and b.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIfactor(a); GIfactor(b);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">Recall that the gcd is also a linear combination.  Maple lets us recover the coefficients of the linear combination with the GIgcdex command.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIgcdex(a, b, 'x', 'y');
print(x, y);
a*x+b*y;</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">We also recall that we can produce a lcm by taking the product and dividing by the gcd.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIlcm(a, b);
a*b/GIgcd(a,b);</Font></Text-field></Input></Group><Section collapsed="true"><Title><Text-field layout="Heading 3" style="_cstyle257"><Font bold="true" family="Times New Roman" foreground="[0,0,0]" size="12" underline="false">Exercises</Font></Text-field></Title><Group><Input><Text-field layout="Normal" style="Normal">3)  Find the GCD  of  1257 + 2923*I  and 296 + 185*I by the Euclidean algorithm.  (Don't use the GIgcd or GIgcdex commands.)  Check your answer by doing prime factorizations of the two numbers.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">The gcd is....</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">4)  Use your answer to exercise 2 to find the lcm of the two numbers.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group></Section></Section><Section collapsed="true"><Title><Text-field layout="Heading 2" style="Heading 2">The Chinese Remainder Theorem</Text-field></Title><Group><Input><Text-field layout="Normal" style="Normal">One of the things we can do in a PID is to use the Chinese Remainder theorem.  That theorem says that if we have a finite set of comaximal ideals (<Equation input-equation="a[i]" style="2D Comment">NiMmJSJhRzYjJSJpRw==</Equation>), and a set of remainders <Equation input-equation="r[i]" style="2D Comment">NiMmJSJyRzYjJSJpRw==</Equation>, we can find an element x such that x is congruent to <Equation input-equation="r[i]" style="2D Comment">NiMmJSJyRzYjJSJpRw==</Equation> mod (<Equation input-equation="a[i]" style="2D Comment">NiMmJSJhRzYjJSJpRw==</Equation>) for all i.  Consider that the case with three comaximal ideals.  Then we want to find constants <Equation input-equation="m[ij]" style="2D Comment">NiMmJSJtRzYjJSNpakc=</Equation> such that </Text-field><Text-field layout="Normal" style="Normal"><Equation input-equation="1=m[11]*a[1] + m[12]*a[2]*a[3]  " style="2D Comment">NiMvIiIiLCYqJiYlIm1HNiMiIzZGJCYlImFHNiNGJEYkRiQqKCZGKDYjIiM3RiQmRiw2IyIiI0YkJkYsNiMiIiRGJEYk</Equation> ,  <Equation input-equation="1=m[21]*a[2] + m[22]*a[1]*a[3]" style="2D Comment">NiMvIiIiLCYqJiYlIm1HNiMiI0BGJCYlImFHNiMiIiNGJEYkKigmRig2IyIjQUYkJkYsNiNGJEYkJkYsNiMiIiRGJEYk</Equation> , and  <Equation input-equation="1 = m[31]*a[3]+m[32]*a[2]*a[1]" style="2D Comment">NiMvIiIiLCYqJiYlIm1HNiMiI0pGJCYlImFHNiMiIiRGJEYkKigmRig2IyIjS0YkJkYsNiMiIiNGJCZGLDYjRiRGJEYk</Equation>.</Text-field><Text-field layout="Normal" style="Normal">Then in terms of the congruences, </Text-field><Text-field layout="Normal" style="Normal">  <Equation input-equation="m[12]*a[2]*a[3]" style="2D Comment">NiMqKCYlIm1HNiMiIzciIiImJSJhRzYjIiIjRigmRio2IyIiJEYo</Equation> = (1, 0 , 0),   <Equation input-equation="m[2,2]*a[1]*a[3]" style="2D Comment">NiMqKCYlIm1HNiQiIiNGJyIiIiYlImFHNiNGKEYoJkYqNiMiIiRGKA==</Equation> = (0, 1, 0),   <Equation input-equation="m[3,2]*a[1]*a[2]" style="2D Comment">NiMqKCYlIm1HNiQiIiQiIiMiIiImJSJhRzYjRilGKSZGKzYjRihGKQ==</Equation> = (0, 0, 1).</Text-field><Text-field layout="Normal" style="Normal">This means the number we want is  <Equation input-equation="r[1]*m[12]*a[2]*a[3] + r[2]*m[22]*a[1]*a[3] + r[3]*m[32]*a[1]*a[2]" style="2D Comment">NiMsKCoqJiUickc2IyIiIkYoJiUibUc2IyIjN0YoJiUiYUc2IyIiI0YoJkYuNiMiIiRGKEYoKiomRiZGL0YoJkYqNiMiI0FGKCZGLkYnRihGMUYoRigqKiZGJkYyRigmRio2IyIjS0YoRjlGKEYtRihGKA==</Equation>.</Text-field><Text-field layout="Normal" style="Normal"/></Input></Group><Group><Input><Text-field layout="Heading 3" style="Heading 3">Example</Text-field><Text-field layout="Normal" style="Normal">  Find a Gaussian integer that is congruent to 1 mod 7, to 2 mod 3 + 4*I, and to 3 mod 1 + 11*I.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">a[1] := 7;  a[2] := 3 + 4*I;  a[3] := 1 + 11*I; 
r[1] := 1; r[2] := 2;  r[3] := 3;</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIgcdex(a[1], a[2]*a[3], 'm[11]', 'm[12]');
GIgcdex(a[2], a[1]*a[3], 'm[21]', 'm[22]');
GIgcdex(a[3], a[2]*a[1], 'm[31]', 'm[32]');
print(m[12], m[22], m[32]);</Font>
</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">c:= r[1]*m[12]*a[2]*a[3]+r[2]*m[22]*a[1]*a[3]+r[3]*m[32]*a[1]*a[2];</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">This is our answer.  We can use GIrem to check our work.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">GIrem(c, a[1]);  GIrem(c, a[2]);  GIrem(c, a[3]);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">We can also do the same thing with the command GIchrem.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">d:=GIchrem( [r[1], r[2], r[3]], [a[1], a[2], a[3]]);</Font></Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Normal">This seems to give a different answer.  We compare c-d with the product a[1]*a[2]*a[3] to see they are equivalent.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" size="12" underline="false">a[1]*a[2]*a[3]; c-d;</Font></Text-field></Input></Group><Section collapsed="true"><Title><Text-field layout="Heading 3" style="_cstyle256"><Font bold="true" family="Times New Roman" foreground="[0,0,0]" size="12" underline="false">Exercise:</Font></Text-field></Title><Group><Input><Text-field layout="Normal" style="Normal">5)  Without using GIchrem, find a Gaussian integer that is congruent to 1 mod 1 + I,</Text-field><Text-field layout="Normal" style="Normal">to 2 mod 3, to 3 mod 2 + I, and to 4 mod 7,</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group></Section></Section><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/><Text-field/></Worksheet>