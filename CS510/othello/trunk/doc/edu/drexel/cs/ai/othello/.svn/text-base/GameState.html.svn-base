<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_35) on Sun Oct 21 11:12:12 EDT 2012 -->
<TITLE>
GameState (Othello 2.2 API Specification)
</TITLE>

<META NAME="date" CONTENT="2012-10-21">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="GameState (Othello 2.2 API Specification)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/GameState.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>Othello 2.2</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/ConsoleUserInterface.html" title="class in edu.drexel.cs.ai.othello"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.GameStatus.html" title="enum in edu.drexel.cs.ai.othello"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?edu/drexel/cs/ai/othello/GameState.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GameState.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
edu.drexel.cs.ai.othello</FONT>
<BR>
Class GameState</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>edu.drexel.cs.ai.othello.GameState</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.lang.Cloneable</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>GameState</B><DT>extends java.lang.Object<DT>implements java.lang.Cloneable</DL>
</PRE>

<P>
A class for storing all aspects of the game state of Othello,
 including the board state and current player.  This class also
 includes utilities such as a successor function.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD><a href="http://www.sultanik.com" target="_blank">Evan A. Sultanik</a></DD>
</DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.GameStatus.html" title="enum in edu.drexel.cs.ai.othello">GameState.GameStatus</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An enumeration of the possible states of the game.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An enumeration of the possible owners of a square in the game board.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#GameState()">GameState</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>GameState</code> with the initial board
 configuration, a random initial player, and the random number
 generator seeded to a random value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#GameState(long)">GameState</A></B>(long&nbsp;randomNumberGeneratorSeed)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new GameState with the initial board configuration, a
 random initial player, and the random number generator seeded
 to the given value.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square)">applyMove</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;move)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Equivalent to <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square, boolean)"><CODE>applyMove(move, true)</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square, boolean)">applyMove</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;move,
          boolean&nbsp;includePreviousStateReference)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the GameState resulting from applying the given move to
 this state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#clone()">clone</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a copy of this GameState.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#equals(java.lang.Object)">equals</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns whether or not <code>o</code> is equivalent to this
 GameState.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getCurrentPlayer()">getCurrentPlayer</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the player whose turn it is to make a move.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getOpponent(edu.drexel.cs.ai.othello.GameState.Player)">getOpponent</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the opponent of a player.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getPreviousMove()">getPreviousMove</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the previous move that was used to get to this state
 (or <code>null</code> if this is the initial state).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getPreviousState()">getPreviousState</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the previous state (or <code>null</code> if this is the
 initial state).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Random</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getRandom()">getRandom</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the random number generator for this game.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getScore(edu.drexel.cs.ai.othello.GameState.Player)">getScore</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of spaces currently owned by the given
 player.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSquare(int, int)">getSquare</A></B>(int&nbsp;row,
          int&nbsp;col)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the player that currently owns the given square.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSquare(edu.drexel.cs.ai.othello.Square)">getSquare</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;square)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the player that currently owns the given square.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.GameStatus.html" title="enum in edu.drexel.cs.ai.othello">GameState.GameStatus</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getStatus()">getStatus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the current status of the game.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSuccessors()">getSuccessors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Equivalent to <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSuccessors(boolean)"><CODE>getSuccessors(true)</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSuccessors(boolean)">getSuccessors</A></B>(boolean&nbsp;includePreviousStateReference)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns all valid GameStates that may succeed this state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getValidMoves()">getValidMoves</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns all valid Moves that may be taken from this state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getValidMoves(edu.drexel.cs.ai.othello.GameState.Player)">getValidMoves</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns all valid Moves that may be taken by
 <code>player</code> from this state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getWinner()">getWinner</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the winner of the game or <code>null</code> if the game
 was either a tie or the game has not yet finished.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#hashCode()">hashCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Equivalent to calling <CODE>hashCode()</CODE> on the result of <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#uniqueHashCode()"><CODE>uniqueHashCode()</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#isLegalMove(edu.drexel.cs.ai.othello.Square, edu.drexel.cs.ai.othello.GameState.Player)">isLegalMove</A></B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;move,
            <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if and only if <code>move</code> is
 legal for <code>player</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#main(java.lang.String[])">main</A></B>(java.lang.String[]&nbsp;args)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a string representation of the game board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.math.BigInteger</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#uniqueHashCode()">uniqueHashCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a unique number identifying this GameState.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>finalize, getClass, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="GameState()"><!-- --></A><H3>
GameState</H3>
<PRE>
public <B>GameState</B>()</PRE>
<DL>
<DD>Constructs a new <code>GameState</code> with the initial board
 configuration, a random initial player, and the random number
 generator seeded to a random value.
<P>
</DL>
<HR>

<A NAME="GameState(long)"><!-- --></A><H3>
GameState</H3>
<PRE>
public <B>GameState</B>(long&nbsp;randomNumberGeneratorSeed)</PRE>
<DL>
<DD>Creates a new GameState with the initial board configuration, a
 random initial player, and the random number generator seeded
 to the given value.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="clone()"><!-- --></A><H3>
clone</H3>
<PRE>
public java.lang.Object <B>clone</B>()</PRE>
<DL>
<DD>Returns a copy of this GameState.  Note that this is a shallow
 copy; preceding states are not cloned.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>clone</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getCurrentPlayer()"><!-- --></A><H3>
getCurrentPlayer</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A> <B>getCurrentPlayer</B>()</PRE>
<DL>
<DD>Returns the player whose turn it is to make a move.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getRandom()"><!-- --></A><H3>
getRandom</H3>
<PRE>
public java.util.Random <B>getRandom</B>()</PRE>
<DL>
<DD>Returns the random number generator for this game.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getOpponent(edu.drexel.cs.ai.othello.GameState.Player)"><!-- --></A><H3>
getOpponent</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A> <B>getOpponent</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</PRE>
<DL>
<DD>Returns the opponent of a player.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSquare(int, int)"><!-- --></A><H3>
getSquare</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A> <B>getSquare</B>(int&nbsp;row,
                                  int&nbsp;col)</PRE>
<DL>
<DD>Returns the player that currently owns the given square.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSquare(edu.drexel.cs.ai.othello.Square)"><!-- --></A><H3>
getSquare</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A> <B>getSquare</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;square)</PRE>
<DL>
<DD>Returns the player that currently owns the given square.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isLegalMove(edu.drexel.cs.ai.othello.Square, edu.drexel.cs.ai.othello.GameState.Player)"><!-- --></A><H3>
isLegalMove</H3>
<PRE>
public boolean <B>isLegalMove</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;move,
                           <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</PRE>
<DL>
<DD>Returns <code>true</code> if and only if <code>move</code> is
 legal for <code>player</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getValidMoves()"><!-- --></A><H3>
getValidMoves</H3>
<PRE>
public java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&gt; <B>getValidMoves</B>()</PRE>
<DL>
<DD>Returns all valid Moves that may be taken from this state.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getValidMoves(edu.drexel.cs.ai.othello.GameState.Player)"><!-- --></A><H3>
getValidMoves</H3>
<PRE>
public java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&gt; <B>getValidMoves</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</PRE>
<DL>
<DD>Returns all valid Moves that may be taken by
 <code>player</code> from this state.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getScore(edu.drexel.cs.ai.othello.GameState.Player)"><!-- --></A><H3>
getScore</H3>
<PRE>
public int <B>getScore</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A>&nbsp;player)</PRE>
<DL>
<DD>Returns the number of spaces currently owned by the given
 player.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getWinner()"><!-- --></A><H3>
getWinner</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.Player.html" title="enum in edu.drexel.cs.ai.othello">GameState.Player</A> <B>getWinner</B>()</PRE>
<DL>
<DD>Returns the winner of the game or <code>null</code> if the game
 was either a tie or the game has not yet finished.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getStatus()"><!-- --></A><H3>
getStatus</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.GameStatus.html" title="enum in edu.drexel.cs.ai.othello">GameState.GameStatus</A> <B>getStatus</B>()</PRE>
<DL>
<DD>Returns the current status of the game.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSuccessors()"><!-- --></A><H3>
getSuccessors</H3>
<PRE>
public java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A>&gt; <B>getSuccessors</B>()</PRE>
<DL>
<DD>Equivalent to <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSuccessors(boolean)"><CODE>getSuccessors(true)</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getSuccessors(boolean)"><CODE>getSuccessors(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSuccessors(boolean)"><!-- --></A><H3>
getSuccessors</H3>
<PRE>
public java.util.AbstractSet&lt;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A>&gt; <B>getSuccessors</B>(boolean&nbsp;includePreviousStateReference)</PRE>
<DL>
<DD>Returns all valid GameStates that may succeed this state.

 <p>Note that if <code>includePreviousStateReference</code> is
 <code>false</code>, the returned states will return
 <code>null</code> when <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getPreviousState()"><CODE>getPreviousState()</CODE></A> is called.
 This is useful to reduce memory if the back-references are not
 required.</p>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>includePreviousStateReference</CODE> - whether or not the returned states should have back-references to <code>this</code>.<DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square, boolean)"><CODE>applyMove(Square, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="applyMove(edu.drexel.cs.ai.othello.Square)"><!-- --></A><H3>
applyMove</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A> <B>applyMove</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;move)
                    throws <A HREF="../../../../../edu/drexel/cs/ai/othello/InvalidMoveException.html" title="class in edu.drexel.cs.ai.othello">InvalidMoveException</A></PRE>
<DL>
<DD>Equivalent to <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square, boolean)"><CODE>applyMove(move, true)</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/drexel/cs/ai/othello/InvalidMoveException.html" title="class in edu.drexel.cs.ai.othello">InvalidMoveException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square, boolean)"><CODE>applyMove(Square,boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="applyMove(edu.drexel.cs.ai.othello.Square, boolean)"><!-- --></A><H3>
applyMove</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A> <B>applyMove</B>(<A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A>&nbsp;move,
                           boolean&nbsp;includePreviousStateReference)
                    throws <A HREF="../../../../../edu/drexel/cs/ai/othello/InvalidMoveException.html" title="class in edu.drexel.cs.ai.othello">InvalidMoveException</A></PRE>
<DL>
<DD>Returns the GameState resulting from applying the given move to
 this state.

 <p><code>applyMove</code> <b>does not</b> apply the given move
 to the current state; it does not in any way alter
 <code>this</code>.  Instead, <code>applyMove</code>
 <em>returns</em> the state that <em>results</em> from making
 the given move in the current state.</p>

 <p>Note that if <code>includePreviousStateReference</code> is
 <code>false</code>, the returned state will return
 <code>null</code> when <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#getPreviousState()"><CODE>getPreviousState()</CODE></A> is called.
 This is useful to save memory if the back-references to
 previous states are not required (<i>i.e.</i> the previous
 states may be garbage collected).</p>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>includePreviousStateReference</CODE> - whether or not the returned state should have a back-reference to <code>this</code>.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../edu/drexel/cs/ai/othello/InvalidMoveException.html" title="class in edu.drexel.cs.ai.othello">InvalidMoveException</A></CODE> - if <code>move</code> is not a valid move from this state.</DL>
</DD>
</DL>
<HR>

<A NAME="getPreviousState()"><!-- --></A><H3>
getPreviousState</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html" title="class in edu.drexel.cs.ai.othello">GameState</A> <B>getPreviousState</B>()</PRE>
<DL>
<DD>Returns the previous state (or <code>null</code> if this is the
 initial state).  This function may also return
 <code>null</code> if <code>this</code> was created without a
 back-reference to the previous state (to save memory).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#applyMove(edu.drexel.cs.ai.othello.Square, boolean)"><CODE>applyMove(Square, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getPreviousMove()"><!-- --></A><H3>
getPreviousMove</H3>
<PRE>
public <A HREF="../../../../../edu/drexel/cs/ai/othello/Square.html" title="class in edu.drexel.cs.ai.othello">Square</A> <B>getPreviousMove</B>()</PRE>
<DL>
<DD>Returns the previous move that was used to get to this state
 (or <code>null</code> if this is the initial state).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>Returns a string representation of the game board.
 <p>Example:
<pre>
    a b c d e f g h   [@=2 O=5]
  0 . . . . . . . .
  1 . . . . . . . .
  2 . . . O . . . .
  3 . . . O O . . .
  4 . . @ O @ . . .
  5 . . O . . . . .
  6 . . . . . . . .
  7 . . . . . . . .
</pre></p>
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <B>equals</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Returns whether or not <code>o</code> is equivalent to this
 GameState.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>equals</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#uniqueHashCode()"><CODE>uniqueHashCode()</CODE></A>, 
<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#hashCode()"><CODE>hashCode()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="uniqueHashCode()"><!-- --></A><H3>
uniqueHashCode</H3>
<PRE>
public java.math.BigInteger <B>uniqueHashCode</B>()</PRE>
<DL>
<DD>Returns a unique number identifying this GameState.

 <p>
 <table>
 <tr><td colspan="4" align="left">The following are always true:</td></tr>
 <tr><td><ul type="disc"><li></li></ul></td><td align="right"><code>x.uniqueHashCode() == y.uniqueHashCode()</code></td><td>&rArr;</td><td><code>x.equals(y)</code></td></tr>
 <tr><td><ul type="disc"><li></li></ul></td><td align="right"><code>x.equals(y)</code></td><td>&rArr;</td><td><code>x.uniqueHashCode() == y.uniqueHashCode()</code></td></tr>
 <tr><td><ul type="disc"><li></li></ul></td><td align="right"><code>x.equals(y)</code></td><td>&rArr;</td><td><code>x.hashCode() == y.hashCode()</code></td></tr>
 <tr><td colspan="4" align="left"><em>However</em>, the following are <em>not necessarily</em> true:</td></tr>
 <tr><td><ul type="disc"><li></li></ul></td><td align="right"><code>x.hashCode() == y.hashCode()</code></td><td>&rArr;</td><td><code>x.equals(y)</code></td></tr>
 </table></p>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#equals(java.lang.Object)"><CODE>equals(Object)</CODE></A>, 
<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#hashCode()"><CODE>hashCode()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="hashCode()"><!-- --></A><H3>
hashCode</H3>
<PRE>
public int <B>hashCode</B>()</PRE>
<DL>
<DD>Equivalent to calling <CODE>hashCode()</CODE> on the result of <A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#uniqueHashCode()"><CODE>uniqueHashCode()</CODE></A>.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>hashCode</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#equals(java.lang.Object)"><CODE>equals(Object)</CODE></A>, 
<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.html#hashCode()"><CODE>hashCode()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="main(java.lang.String[])"><!-- --></A><H3>
main</H3>
<PRE>
public static void <B>main</B>(java.lang.String[]&nbsp;args)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/GameState.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b>Othello 2.2</b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/ConsoleUserInterface.html" title="class in edu.drexel.cs.ai.othello"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../edu/drexel/cs/ai/othello/GameState.GameStatus.html" title="enum in edu.drexel.cs.ai.othello"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?edu/drexel/cs/ai/othello/GameState.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GameState.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
Copyright 2006&ndash;2007 <a href="http://www.sultanik.com/">Evan A. Sultanik</a></font>
</BODY>
</HTML>
